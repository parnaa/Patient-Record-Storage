{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "Doctor_Record",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "qualification",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "workPlace",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "specialization",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "reviewers",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalRatingPoints",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "exists",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "Doctors_Rating",
				"outputs": [
					{
						"internalType": "enum patientRecordStorage.reviewDoctor",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "MedRecordEditor",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "Medicine_list",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "continue_status",
						"type": "bool"
					},
					{
						"internalType": "enum patientRecordStorage.medicine_dosage",
						"name": "dosage",
						"type": "uint8"
					},
					{
						"internalType": "enum patientRecordStorage.medicine_timing",
						"name": "dosageTiming",
						"type": "uint8"
					},
					{
						"internalType": "bool",
						"name": "exists",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "enum patientRecordStorage.medicine_dosage",
						"name": "_dose",
						"type": "uint8"
					},
					{
						"internalType": "enum patientRecordStorage.medicine_timing",
						"name": "_dosetime",
						"type": "uint8"
					}
				],
				"name": "addMedicine",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_disease_name",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_patient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_treatment_status",
						"type": "uint256"
					}
				],
				"name": "add_Disease",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_editor_address",
						"type": "address"
					}
				],
				"name": "approvePatientRecordEditor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_editor_address",
						"type": "address"
					}
				],
				"name": "disapprovePatientRecordEditor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_patient",
						"type": "address"
					}
				],
				"name": "get_Disease_Details_Of_patient",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "enum patientRecordStorage.RecoveryStatus",
								"name": "recoveryStatus",
								"type": "uint8"
							}
						],
						"internalType": "struct patientRecordStorage.Disease[]",
						"name": "_d",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_doctor",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_rate",
						"type": "uint256"
					}
				],
				"name": "giveReviewTotheDoctor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_toPatient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_medid",
						"type": "uint256"
					},
					{
						"internalType": "enum patientRecordStorage.medicine_dosage",
						"name": "_dose",
						"type": "uint8"
					},
					{
						"internalType": "enum patientRecordStorage.medicine_timing",
						"name": "_dosetime",
						"type": "uint8"
					}
				],
				"name": "prescribeMedicine",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_qualification",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_specialization",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_workPlace",
						"type": "string"
					}
				],
				"name": "register_as_doctor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_dob",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_weight",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_height",
						"type": "uint256"
					}
				],
				"name": "register_as_patient",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_patient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_treatment_status",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "update_Recovery_Status",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_doctor",
						"type": "address"
					}
				],
				"name": "viewDoctorDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "qualification",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "workPlace",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "specialization",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "reviewers",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalRatingPoints",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "exists",
								"type": "bool"
							}
						],
						"internalType": "struct patientRecordStorage.Doctor",
						"name": "_doc",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_doctor",
						"type": "address"
					}
				],
				"name": "viewDoctorRating",
				"outputs": [
					{
						"internalType": "enum patientRecordStorage.reviewDoctor",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_medid",
						"type": "uint256"
					}
				],
				"name": "viewMedicineDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "continue_status",
								"type": "bool"
							},
							{
								"internalType": "enum patientRecordStorage.medicine_dosage",
								"name": "dosage",
								"type": "uint8"
							},
							{
								"internalType": "enum patientRecordStorage.medicine_timing",
								"name": "dosageTiming",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "exists",
								"type": "bool"
							}
						],
						"internalType": "struct patientRecordStorage.Medicine",
						"name": "_m",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_patient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_dob",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_pname",
						"type": "string"
					}
				],
				"name": "viewPatientDiseaseDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "enum patientRecordStorage.RecoveryStatus",
								"name": "recoveryStatus",
								"type": "uint8"
							}
						],
						"internalType": "struct patientRecordStorage.Disease[]",
						"name": "_d",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_patient",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_pname",
						"type": "string"
					}
				],
				"name": "viewPatientMedicationsByDoctor",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "continue_status",
								"type": "bool"
							},
							{
								"internalType": "enum patientRecordStorage.medicine_dosage",
								"name": "dosage",
								"type": "uint8"
							},
							{
								"internalType": "enum patientRecordStorage.medicine_timing",
								"name": "dosageTiming",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "exists",
								"type": "bool"
							}
						],
						"internalType": "struct patientRecordStorage.Medicine[]",
						"name": "_m",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addMedicine(uint256,string,uint8,uint8)": {
					"params": {
						"_dose": "a recommended Dose prescribed to the patient (In general)",
						"_dosetime": "recommended Dose time prescribed to patient (In general)",
						"_id": "Id of the medicine",
						"_name": "name of the medicine"
					}
				},
				"add_Disease(string,address,uint256)": {
					"params": {
						"_disease_name": "Name of the disease",
						"_patient": "address of patient (wallet address is used as unique identification)"
					}
				},
				"prescribeMedicine(address,uint256,uint8,uint8)": {
					"params": {
						"_dose": "prescribed dosage  ",
						"_dosetime": "prescribed dose timings",
						"_medid": "medicine id",
						"_toPatient": "prescribed to which patient"
					}
				},
				"register_as_doctor(string,string,string,string)": {
					"params": {
						"_name": "Name of the doctor",
						"_qualification": "Which degree he/she holds as a doctor",
						"_specialization": "If the doctor is a aspecialist",
						"_workPlace": "Address of his/her hospital/clinic"
					}
				},
				"register_as_patient(string,uint256,uint256,uint256)": {
					"params": {
						"_dob": "Age of user",
						"_height": "patient's height in cm",
						"_name": "Name of the user",
						"_weight": "patient's weight in kg"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"approvePatientRecordEditor(address)": {
					"notice": "approve doctor can check patient and prescribe medicines  , approved user can change patient record"
				},
				"register_as_doctor(string,string,string,string)": {
					"notice": "This function is used to register a new doctor to the ledger"
				},
				"register_as_patient(string,uint256,uint256,uint256)": {
					"notice": "This function is used to register a new patient to the ledger"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/PatientRecordStorage.sol": "patientRecordStorage"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/PatientRecordStorage.sol": {
			"keccak256": "0xb5d0d0e4a71d0ca8c4ff06db1d963e7f6553efe4aa47e13a960206c2813fc9a6",
			"license": "unlicensed",
			"urls": [
				"bzz-raw://5d4e99cea9891a686e478545aecff09cc2d1b022c9f1f5879a62ffbaef94d6dd",
				"dweb:/ipfs/QmULfHoxqzDCpchCqtEbAEtBJcjqSyhZpMKjqyH6C4GfHy"
			]
		}
	},
	"version": 1
}